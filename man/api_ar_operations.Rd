% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/api_array_zar_X.R
\name{api_ar_operations}
\alias{api_ar_operations}
\alias{ar_sum}
\alias{\%a+\%}
\alias{\%a-\%}
\alias{\%a*\%}
\alias{\%a/\%}
\alias{\%a/0\%}
\alias{ar_prod}
\alias{ar_prod_list}
\alias{ar_sum_list}
\alias{ar_add}
\alias{ar_subt}
\alias{ar_mult}
\alias{ar_div}
\alias{ar_div0}
\alias{ar_expand}
\alias{\%a^\%}
\alias{ar_align}
\alias{\%aa\%}
\alias{ar_perm}
\alias{\%ap\%}
\alias{ar_marg}
\alias{\%a_\%}
\alias{ar_equal}
\alias{\%a==\%}
\title{Array algebra}
\usage{
ar_sum(tab, ...)

ar_prod(tab, ...)

ar_prod_list(lst)

ar_sum_list(lst)

a1 \%a+\% a2

a1 \%a-\% a2

a1 \%a*\% a2

a1 \%a/\% a2

a1 \%a/0\% a2

ar_add(a1, a2)

ar_subt(a1, a2)

ar_mult(a1, a2)

ar_div(a1, a2)

ar_div0(a1, a2)

ar_expand(tab, aux)

tab1 \%a^\% extra

ar_align(tab1, tab2)

tab1 \%aa\% tab2

ar_perm(tab, perm)

tab1 \%ap\% perm

ar_marg(tab, marg = NULL)

tab1 \%a_\% marg

ar_equal(tab1, tab2, eps = 1e-12)

tab1 \%a==\% tab2
}
\arguments{
\item{tab, tab1, tab2}{Multidimensional arrays with named dimnames
(we call them 'named arrays').}

\item{lst}{List of arrays.}

\item{aux}{Either a list with names and dimnames or a named array
from which such a list can be extracted.}

\item{extra}{List defining the extra dimensions.}

\item{perm}{A vector of indices or dimnames or a right hand sided
formula giving the desired permutiation.}

\item{marg}{A vector of indices or dimnames or a right hand sided
formula giving the desired marginal.}

\item{eps}{Criterion for checking equality of two arrays.}

\item{a, a1, a2, ...}{Arrays (with named dimnames)}
}
\description{
Addition, subtraction etc. of arrays
}
\examples{
hec <- HairEyeColor
a1 <- ar_marg(hec, c("Hair", "Eye"))
a2 <- ar_marg(hec, c("Hair", "Sex"))
a3 <- ar_marg(hec, c("Eye", "Sex"))

## Binary operations
a1 \%a+\% a2
a1 \%a-\% a2
a1 \%a*\% a2
a1 \%a/\% a2

ar_sum(a1, a2, a3)
ar_prod(a1, a2, a3)

}
\author{
Søren Højsgaard, \email{sorenh@math.aau.dk}
}
