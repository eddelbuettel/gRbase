% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/graph-coerce-list.R
\name{ugl2gn_}
\alias{ugl2gn_}
\alias{ugl2M_}
\alias{ugl2dm_}
\alias{ugl2sm_}
\alias{ugl2ig_}
\alias{dgl2gn_}
\alias{dgl2dm_}
\alias{dgl2sm_}
\alias{dgl2ig_}
\alias{dgl2M_}
\alias{adl2gn_}
\alias{adl2dm_}
\alias{adl2sm_}
\alias{adl2ig_}
\alias{adl2M_}
\alias{M2adl_}
\alias{M2ugl_}
\alias{M2dgl_}
\alias{M2adjList}
\alias{M2ugList}
\alias{M2dagList}
\alias{ugList2graphNEL}
\alias{ugList2M}
\alias{dagList2graphNEL}
\alias{dagList2M}
\alias{adjList2M}
\alias{glist2adjMAT}
\title{Coercion of graphs represented as lists}
\usage{
ugl2gn_(glist, vn = NULL)

ugl2M_(glist, vn = NULL, result = "matrix")

ugl2dm_(zz, vn = NULL)

ugl2sm_(zz, vn = NULL)

ugl2ig_(zz, vn = NULL)

dgl2gn_(glist, vn = NULL)

dgl2dm_(zz, vn = NULL)

dgl2sm_(zz, vn = NULL)

dgl2ig_(zz, vn = NULL)

dgl2M_(glist, vn = NULL, result = "matrix")

adl2gn_(zz)

adl2dm_(zz)

adl2sm_(zz)

adl2ig_(zz)

adl2M_(alist, result = "matrix")

M2adl_(amat)

M2ugl_(amat)

M2dgl_(amat)

M2adjList(amat)

M2ugList(amat)

M2dagList(amat)

ugList2graphNEL(glist, vn = NULL)

ugList2M(glist, vn = NULL, result = "matrix")

dagList2graphNEL(glist, vn = NULL)

dagList2M(glist, vn = NULL, result = "matrix")

adjList2M(alist, result = "matrix")

glist2adjMAT(glist, vn = NULL, result = "matrix")
}
\arguments{
\item{glist}{A list of generators where a generator is a character
vector. If interpreted as generators of an undirected graph, a
generator is a complete set of vertices in the graph. If
interpreted as generators of a dag, a generator (v1,...,vn)
means that there will be arrows from v2,...,vn to v1.}

\item{vn}{The names of the vertices in the graphs. These will be
the row and column names of the matrix}

\item{result}{FIXME}

\item{zz}{An object representing a graph.}

\item{alist}{An adjacency list.}

\item{amat}{Adjacency matrix (dense or sparse dgCMatrix).}
}
\description{
FIXME
}
\examples{

## Sparse and dense adjacency matrices converted to adjacency list 
g1 <- ug(~a:b + b:c + c:d, result="matrix")
g2 <- ug(~a:b + b:c + c:d, result="dgCMatrix")
M2adjList( g1 )
## M2adjList( g2 ) ## FIXME FAILS for sparse matrix

## Sparse and dense adjacency matrices converted to cliques
M2ugList( g1 )
## M2ugList( g2 ) ## FIXME Is there an issue here??
## Sparse and dense adjacency matrices converted to cliques
M2dagList( g1 )
## M2dagList( g2 ) ## Fails for sparse matrix

}
